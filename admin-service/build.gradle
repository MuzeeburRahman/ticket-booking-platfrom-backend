plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.12'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco' // Add the Jacoco plugin
}

group = 'com.sapient'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springdoc:springdoc-openapi-ui:1.7.0' // Ensure compatibility with Spring Boot 3.x
    implementation 'org.springframework.kafka:spring-kafka' // Updated from the incorrect notation
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:5.0.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.0.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    testImplementation 'org.springframework.kafka:spring-kafka-test'

    // For using assertions with Mockito
    testImplementation 'org.mockito:mockito-inline:5.0.0'
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2021.0.7" // Use the latest compatible version
    }}
jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
        html.outputLocation = file("$buildDir/reports/jacoco")
    }
}
tasks.test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // Run Jacoco after tests
}